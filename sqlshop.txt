CREATE DATABASE craigies_cakes;

USE craigies_cakes;

CREATE TABLE customers (
customer_id INT auto_increment,
first_name varchar(50) NOT NULL,
last_name varchar(50) NOT NULL,
email varchar(50) NOT NULL,
primary key(customer_id)
);

CREATE TABLE products (
product_id INT auto_increment,
name varchar(50) NOT NULL,
stock INT NOT NULL,
cost DEC(5,2),
PRIMARY KEY(product_id)
);

CREATE TABLE orders (
order_id INT auto_increment,
fk_customer_id INT NOT NULL,
date timestamp NOT NULL,
primary key(order_id),
foreign key(fk_customer_id) references customers(customer_id)
);
 
 CREATE TABLE orderline (
 orderline_id INT auto_increment,
 fk_order_id INT NOT NULL,
 fk_product_id INT NOT NULL,
 amount INT NOT NULL,
 cost DEC(5,2),
 shipping_date DATE NOT NULL,
 primary key(orderline_id),
 foreign key(fk_order_id) references orders(order_id),
 foreign key(fk_product_id) references products(product_id)
 );
 
 INSERT INTO customers (first_name, last_name, email) VALUES ('Dan', 'Smith', 'dan@email.com'), 
 ('Cake', 'Boy', 'cake@email.com'), ('Tracy', 'Jones', 'tracy@email.com'), ('Stu', 'Done', 'stu@email.com'),
 ('Maeve', 'Craigie', 'maeve@email.com');
 
 SELECT * FROM customers;
 
 INSERT INTO products (name, stock, cost) values ('Muffin', 100, 2.50), ('Cronut', 50, 3.65), 
 ('Cookie', 67, 0.99), ('Shortbread', 200, 1.00), ('Eclair', 58, 2.45);
 
 SelECT * from products;
 
 INSERT INTO orders (fk_customer_id, date) values (1, '2022-01-15');
 INSERT INTO orders (fk_customer_id, date) values (2, '2022-01-12'), (3, '2022-01-08'), (4, '2022-01-10'),
 (5, '2022-01-12');
 
 SELECT * from orders;
 
 select * from orderline;
 
 INSERT INTO orderline (fk_order_id, fk_product_id, amount, cost, shipping_date) VALUES
 (5, 1, 3, 5.00, '2022-01-07'), (4, 2, 10, 8.50, '2022-01-11'), (3, 3, 2, 2.50, '2022-01-17'), 
 (2, 4, 5, 7.45, '2022-01-15'), (1, 5, 4, 4.00, '2022-01-13');
 
 SET SQL_SAFE_UPDATES=0;
 
 UPDATE customers SET first_name='Steve' WHERE first_name='Dan'; 
 UPDATE customers SET email='changed@email.com' WHERE last_name='Done';
 UPDATE products SET name='Gateaux' WHERE name='Eclair';
 UPDATE products SET cost=999.50 WHERE name='Cronut';
 UPDATE orders SET fk_customer_id=2 WHERE fk_customer_id=3;
 UPDATE orders SET fk_customer_id=3 WHERE fk_customer_id=1;
 UPDATE orderline SET fk_order_id=1 WHERE amount=4;
 UPDATE orderline SET amount=99 WHERE cost=2.50;
 
 SELECT first_name, email FROM customers where first_name='Maeve';
 SELECT name from products where name LIKE '%t';
 SELECT SUM(cost) from products;
 SELECT customer_id, first_name, last_name, email from customers 
 WHERE customer_id=(SELECT MAX(customer_id) from customers);
 DELETE FROM customers WHERE customer_id>5;
 SELECT p.name, p.cost, p.stock from products p
JOIN orderline o ON p.product_id=o.orderline_id WHERE o.orderline_id=5;
SELECT c.first_name, c.last_name, c.email, o.order_id, o.date FROM customers c
JOIN orders o ON c.customer_id=o.fk_customer_id WHERE date between'2022-01-08' AND '2022-01-18';
SELECT name, cost, stock FROM products WHERE stock < 100;
SELECT name, cost, stock FROM products WHERE stock > 150;
SELECT SUM(cost) FROM orderline WHERE shipping_date BETWEEN '2022-01-01' AND '2022-01-19';
SELECT COUNT(orderline_id) FROM orderline WHERE cost > 2.00;
SELECT COUNT(orderline_id) FROM orderline WHERE cost < 3.00;
SELECT AVG(cost) FROM orderline;
SELECT AVG(cost) FROM orderline WHERE amount BETWEEN 5 AND 999;

CREATE TABLE reviews (
review_id INT auto_increment,
fk_order_id INT NOT NULL,
fk_customer_id INT NOT NULL,
customer_first_name varchar(50) DEFAULT 'Anonymous',
comments varchar(50) NOT NULL,
primary key(review_id),
foreign key(fk_order_id) references orders(order_id),
foreign key(fk_customer_id) references customers(customer_id)
);

DROP TABLE reviews;

CREATE TABLE reviews (
review_id INT auto_increment,
fk_order_id INT NOT NULL,
fk_customer_id INT NOT NULL,
customer_first_name varchar(50) DEFAULT 'Anonymous',
comments varchar(50) DEFAULT 'This place is amazing!',
primary key(review_id),
foreign key(fk_order_id) references orders(order_id),
foreign key(fk_customer_id) references customers(customer_id)
);

INSERT INTO reviews (fk_order_id, fk_customer_id, customer_first_name, comments) 
VALUES (1, 5, 'Steve', 'Awful cakes from the 1970s'); 

select * FROM reviews;  

INSERT INTO reviews (fk_order_id, fk_customer_id, customer_first_name, comments) 
VALUES (2, 5, '', ''), (3, 4, 'Stu', ''); 
